/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package mysparkjava;

import static spark.Spark.*;

import java.util.concurrent.TimeUnit;
import com.codahale.metrics.*;
import org.slf4j.LoggerFactory;
import org.slf4j.Logger;
import com.splunk.logging.SplunkCimLogEvent;

public class App {
    static final MetricRegistry metrics = new MetricRegistry();
    static final Logger logger = LoggerFactory.getLogger(App.class);

    public String rootString() {
        return "Hello world!";
    }

    public String healthString() {
        return "OK";
    }

    public void newRoutes() {
        Meter httpRequests = metrics.meter("http-requests");

        before((request, response) -> {
            httpRequests.mark();
        });

        get("/", (req, res) -> {
            SplunkCimLogEvent event = new SplunkCimLogEvent("http-requests", "http-requests");
            event.addField("body", rootString());
            logger.info(event.toString());
    
            return rootString();
        });

        get("/__health", (req, res) -> {
            SplunkCimLogEvent event = new SplunkCimLogEvent("http-requests", "http-requests");
            event.addField("body", healthString());
            logger.info(event.toString());

            return healthString();
        });
    }

    public static void main(String[] args) {
        startReport();
        new App().newRoutes();
    }

    private static void startReport() {
        ConsoleReporter reporter = ConsoleReporter.forRegistry(metrics)
                .convertRatesTo(TimeUnit.SECONDS)
                .convertDurationsTo(TimeUnit.MILLISECONDS).build();
        reporter.start(10, TimeUnit.SECONDS);
    }
}
